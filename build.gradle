plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'

    //swagger
    id 'org.hidetake.swagger.generator' version '2.19.2'

    //jacoco
    id 'jacoco'
}

group = 'me.kdshim'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-web'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

    implementation 'org.modelmapper:modelmapper:2.4.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    //actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //Swagger
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.34'  // or Swagger Codegen V3
    swaggerUI 'org.webjars:swagger-ui:3.52.5'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.0'
    implementation 'io.swagger:swagger-annotations:1.6.6'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    runtimeOnly 'mysql:mysql-connector-java'

    //h2
    runtimeOnly 'com.h2database:h2'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //AssertJ -> Pretty TestCode
    //https://assertj.github.io/doc/#common-types
    testImplementation "org.assertj:assertj-core:3.20.2"

    //testContainers
    testImplementation 'org.testcontainers:testcontainers:1.16.2'
    testImplementation "org.testcontainers:mysql:1.17.2"



}

jacoco{
    toolVersion = "0.8.5"
}

//SwaggerSource Setting
swaggerSources {
    KDD_J {
        inputFile = file("$rootDir/spec/kdd.yaml")
        code {
            language = 'spring'
            configFile = file("$rootDir/spec/KDD-spec.json")
            wipeOutputDir = false
            outputDir = file("$rootDir")
            components = ['models', 'apis', 'apiTests']
        }
    }
}

//define fullTest Task
//TODO 어떻게 하면 gradle 테스크를 만들고
//TODO 해당 테스크를 어디 기준으로 스캔해서 진행할 것인지, 그룹핑은 성공했으니까 해당 2건만
//task fullTest {
//    tasks.findAll {
//        task -> task.name.startsWith('test')
//    }
//}

task fullTest(type: Test, group: "0.myaction"){
    jacoco{
        append = false
        destinationFile = file("$buildDir}/jacoco/jacocoTest.exec")
    }
}


sourceSets{
    fullTest{
        java{
            srcDir file('src/test/java')
        }
        groovy{
            srcDir file('src/test/java')
        }
        resources{
            srcDir file('src/test/resources')
        }
    }
}



//grouping
def groupName = "0.myAction"
bootRun.group = groupName
generateSwaggerCode.group = groupName
build.group = groupName
clean.group = groupName
fullTest.group = groupName

