/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package swagger.api;

import swagger.model.ErrorResponseDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Api(value = "swaggerTest", description = "the swaggerTest API")
public interface SwaggerTestApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /swaggerTest : simple swagger test api
     * simple swagger test api
     *
     * @return SUCCESS (status code 200)
     *         or FAIL (status code 400)
     */
    @ApiOperation(value = "simple swagger test api", nickname = "swaggerTestGet", notes = "simple swagger test api", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "SUCCESS", response = String.class),
        @ApiResponse(code = 400, message = "FAIL", response = ErrorResponseDto.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/swaggerTest",
        produces = { "application/json" }
    )
    default ResponseEntity<String> _swaggerTestGet() {
        return swaggerTestGet();
    }

    // Override this method
    default  ResponseEntity<String> swaggerTestGet() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "\"responseTest\"";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
