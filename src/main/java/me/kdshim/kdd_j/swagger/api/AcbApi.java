/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.34).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package me.kdshim.kdd_j.swagger.api;

import me.kdshim.kdd_j.swagger.model.ErrorResponseDto;
import me.kdshim.kdd_j.swagger.model.PostTranRequestDto;
import me.kdshim.kdd_j.swagger.model.PostTransResponseDto;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@Validated
@Api(value = "acb", description = "the acb API")
public interface AcbApi {

    AcbApiDelegate getDelegate();

    @ApiOperation(value = "가계부로 transaction 등록", nickname = "postTransaction", notes = "가계부로 transaction 등록", response = PostTransResponseDto.class, tags={ "Util", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = PostTransResponseDto.class),
        @ApiResponse(code = 400, message = "Bad Request", response = ErrorResponseDto.class) })
    @RequestMapping(value = "/acb/transaction",
        produces = { "application/json" }, 
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<PostTransResponseDto> postTransaction(@ApiParam(value = "post transaction request body", required=true ) @Valid @RequestBody PostTranRequestDto body) {
        return getDelegate().postTransaction(body);
    }

}

